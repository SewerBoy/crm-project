package com.bjpowernode.crm.workbench.mapper;

import com.bjpowernode.crm.workbench.domain.ClueActivityRelation;

import java.util.List;
import java.util.Map;

public interface ClueActivityRelationMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Sat Jun 04 15:41:41 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Sat Jun 04 15:41:41 CST 2022
     */
    int insert(ClueActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Sat Jun 04 15:41:41 CST 2022
     */
    int insertSelective(ClueActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Sat Jun 04 15:41:41 CST 2022
     */
    ClueActivityRelation selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Sat Jun 04 15:41:41 CST 2022
     */
    int updateByPrimaryKeySelective(ClueActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Sat Jun 04 15:41:41 CST 2022
     */
    int updateByPrimaryKey(ClueActivityRelation record);

    /**
     * 批量生成线索市场活动关系
     * @param clueActivityRelationList
     * @return
     */
    int insertClueActivityRelationBatch(List<ClueActivityRelation> clueActivityRelationList);

    /**
     * 接触线索与市场关系
     *
     */
    int deleteClueActivityRelation(ClueActivityRelation car);

    /**
     * 根据clueId查询线索市场活动关系
     * @param clueId
     * @return
     */
    List<ClueActivityRelation> selectClueActivityRelationByClueId(String clueId);

    //删除改线索和市场活动关联关系
    int deleteClueActivityRelationByClueIdActivityId(String clueId);

}